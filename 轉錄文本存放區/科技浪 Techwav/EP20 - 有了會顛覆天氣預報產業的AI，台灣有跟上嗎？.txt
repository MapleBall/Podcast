(00:00~01:01) 【音樂】 哈囉大家好,歡迎收聽科技浪,我是主持人哈利 科技浪是一個白話跟你聊科技的Podcast 希望可以用簡單易懂,但是又深入的方式 帶你了解時下最火的科技話題 本集節目由Uni Papa贊助播出 今天要介紹的是Uni Papa的有序延長線快充版 這是他們第二代的延長線產品 這個延長線我覺得是非常棒的一個延長線 我們先從它的插槽開始介紹起好了 這是一個延長線最重要的部分 首先它的插槽有四個AC的插孔 分別是兩個三孔的,跟兩個兩孔的 然後這邊有個亮點就是 Uni Papa的延長線它有加大孔距 孔距是那個孔的距離,孔與孔之間的距離 它們是加大的,我相信很多人一定都有那個經驗 就是你有一些可能非常大的變壓器 非常大的轉接頭要同時插到這個延長線上面
(01:01~02:01) 然後你就發現插不進去 因為那個延長線的設計太糟糕了 它的孔的間距太小了 所以你沒有辦法同時插兩個很大的東西進去 然後你硬要插進去的話 你那個插頭可能還會變形,就壞掉 那你今天如果是使用Uni Papa的延長線 就不會有這個問題 因為它們都有刻意加大孔距 再來除了四個AC的插孔以外 Uni Papa的延長線還有兩個USB-C跟一個USB-A的快充孔位 有65瓦的高瓦數輸出喔 你如果不知道快充的概念的話 這邊給你一些數據 實測來看,65瓦的快充孔位呢 在30分鐘內的充電速度 是35瓦,也就是那種原廠的一般的頭的三倍 這邊指的原廠的那個頭啊 是比較大顆的,專門拿來充筆電的 要1600多塊的那種轉接器 然後我這邊另外再分享一組實測數據 你只要刷給它的時間5分鐘 你手機就可以充15% 60分鐘的話你就可以充到84%
(02:01~03:03) 這邊是iPhone14 Pro的數據 要知道這個快充的功能啊 是真的非常有價值的 市面上一個快充的豆腐頭 然後跟Uni Papa延長線一樣是 兩個USB-C一個USB-A的那種快充豆腐頭 就已經要接近1000塊或是超過1000塊了 那這個Uni Papa的延長線呢 基本上就是自帶了這樣子的一個豆腐頭的概念 那除了它的插槽規劃以外呢 我覺得它的外觀設計也是非常不錯的 首先你一看它你就會覺得 哇,這個延長線長得不一樣 因為它的設計是非常簡潔好看的 我覺得相比一般延長線是更有質感的 同時它也可以完全貼合牆面 跟你的桌子還有牆壁融為一體的感覺 然後它還會附給你一個那種貼片 讓你可以貼在,黏在牆壁上這樣 而且它延長線的那條線啊 是有一個轉軸在那邊的 意思就是說你放置這個延長線的方位方向 是非常多變的 那當然除了它的插槽非常實用 然後它的外觀非常好看以外
(03:03~04:05) 它其他很多延長線設計相關的細節 包括它的協議相容性 它的回路設計 它的內部結構設計等等 Uni Papa都有幫你考慮到 所以說這個延長線 它的相容性穩定性跟使用壽命都是很好的 那你如果想要這樣子一條實用又好看的延長線的話 產品資訊我就放在資訊欄裡面 歡迎你點進去了解一下這個產品 然後想購買的話 我這邊也提供大家一個優惠資訊 結帳的時候輸入我的折扣碼 科技浪這三個字的優惠碼呢 你可以再打八五折 本集業配就到這邊 謝謝Uni Papa的贊助 好那今天這集的上線日期呢 應該是聖誕節當天 25號 所以說這邊就先跟大家說一下 Merry Christmas 聖誕快樂 那今年的聖誕節呢 我是在台北的一個朋友家過 就是我們有大概10個人左右吧 然後聚在他家 一起吃一些好吃的 然後玩一些喝酒遊戲這樣 蠻好玩的 那我們其實有玩很多種喝酒遊戲 就是有那種你把這個酒瓶往前滾 滾到哪裡你就可以拿到那個獎品
(04:05~05:07) 或是那個懲罰這種的遊戲 然後也有一些其他那種 像是可能類似大風吹的那種遊戲 那唯一的共通點呢 就是每一種遊戲我都輸 就我都是最早被淘汰的 因為這種遊戲基本上就是兩種嘛 就是一種是憑運氣 然後一種是憑反應能力 那我的運氣通常都很差 我也不知道為什麼 反正我玩遊戲的運氣就是超衰這樣 那我反應能力 我覺得其實我反應能力沒有很差 但是我不知道為什麼 我玩遊戲的時候 我覺得變得非常遲鈍 就是我平時我是可以反應能力很好的 就是我之前高中的時候也是打球隊 然後同時我也會打game 我會打low之類的 也會玩一些射擊遊戲 所以我覺得我反應能力是並不差的 但是就是不知道為什麼 玩遊戲就是贏不了 尤其像是心臟病這種 真的是你要非常快的遊戲 我就沒有辦法 所以禮拜六晚上呢 我基本上就是一直被罰喝酒 然後吃一大堆很噁爛的東西這樣 對所以還蠻慘的
(05:07~06:07) 但是後來我們是有玩一些卡牌遊戲 然後其中就有玩到一些 然後其中就有玩到一個 我非常擅長的遊戲叫吹牛 我的吹牛真的很強 真的不是我在吹牛 大家應該都知道那個卡牌遊戲吧 吹牛就是 你要透過講一連串的謊話 然後還有揭穿別人的謊話 來慢慢把自己的手牌給丟光 那這個遊戲呢 我覺得我真的是超級強 就是你如果去問我大學的朋友 你就會知道 我勝率真的是高到爆 就是可能四五個人五六個人的局 然後可能連玩四五局之類的 我可以每局都第一名 像是禮拜六的那個場啊 我們是七個人玩 然後玩了兩局 兩局我都是第一名 然後每次大家看我玩得這麼好 他們都會說 喔 Harry你看你 你真的是心機很重的一個人 但其實真的不是這樣 我覺得吹牛根本不是一個吹牛的遊戲 不是一個騙人的遊戲 它是一個統計的遊戲 就是你要玩得很好的話 你要增強的是你的統計能力 就像是我自己的方法的核心概念
(06:07~07:08) 就是你在玩遊戲的時候 你腦子裡面要建立一個統計的模型 然後場面上任何的一舉一動 它呈現出來的那個資訊 你都要拿來更新你腦中的統計模型 然後一直不斷的更新更新更新 更新到最後之後 就會發現我接下來要做的每一件事情 不管是我要抓人家 還是我要出什麼卡 我都會有大於70%或80% 甚至是接近100%的信心 這件事情會讓我成功 那通常到這個地步啊 我手上可能還有可能五六張卡 或甚至是七八張卡 但我都可以在未來的短短幾局之內 就把我手上卡全部都清光 然後就直接贏了 那這種方法呢 我覺得如果你要用一個學術的名詞 來給它定義的話 它基本上就是一個背式統計的方法 然後可能還有一些賽局理論的概念這樣 但當然啦 我實際在用這個方法的時候 我也不會這麼學術好不好 就是實務上呢 就是不會真的去算出接下來每一個舉動 它的成功機率是幾% 不會把那個什麼數字都算出來
(07:08~08:10) 你就是有大概一個感覺這樣 然後同時你也不用去記錄所有的小細節 任何的小線索都不放過 也不用這樣 你可以從重要對你來說重要的線索 開始去做記錄就好了 那這些你要記錄的線索 或者是你說 拿來更新你腦內模型的資訊呢 我覺得大概分成幾種 第一種然後也是我覺得最有用的一種 就是卡片的位置 這個資訊其實超爆多 而且比大家想像的透明非常多 那最基本的是什麼 最基本的就是 你看有人抓別人的兩張二 結果他抓錯了 那確實是兩張二 所以他就把那兩張二拿回去 所以你現在就知道 他現在手上有兩張二 對吧 然後假設那一疊牌裡面 還有你摻雜的一些牌 就你有丟進去的話 然後你自己知道你丟進去什麼 你就知道 那個人現在有你丟的那些牌 這個就是最基本的嘛 那可能還有一些 比較難發現 比較進階一點的線索 就比如說你上面那個人出了一張二 然後他說一張二 沒有人抓 然後輪到你的時候 你就跟一張二
(08:10~09:10) 然後你出的真的是二 然後下一個人抓了 他就抓錯了嘛 然後他把那疊卡拿回去的時候 他看了一眼 然後他發出喔的聲音 然後或者是瞪了一下 你上面的那個人 這就代表說你上面的那個人說謊嘛 對吧 所以說你現在就搞清楚 兩張二的走向了 你知道你上面那個人 他有一張二 你知道你上面那個人 他有一張二 但他一開始沒有出 他說謊 然後你又知道 你下面的那個人 他也有一張二 因為有一張你這邊的二 留到他那邊了 反正你不斷的累積這些資訊 你玩到後來 很多的卡 他的分佈 你都大概知道了 至少兩三張 或甚至是四張 在哪裡你全部都知道了 然後你單純的靠這些資訊去做判斷 你的勝率就已經非常大了 然後玩到後來 你可能比較進階的玩法就是 你會知道 哪一些資訊是比較重要的 你一定要記 哪一些資訊是可能比較不重要的 像是對於排的數字 你手上有的那幾種數字 他其他的分佈在哪裡 這件事情是比你手上沒有的 那些數字的還重要
(09:10~10:11) 因為你手上有的那些數字 才是你可以主動出擊的數字 那反正這種排的位置 就是一個重要資訊啦 那在這個之外呢 就是還有你可以觀察 大家的情緒 以及大家他們的習慣策略 是什麼 包含他在遊戲前期的策略是什麼 遊戲後期的策略是什麼 玩久了真的會發現 大家的策略其實都還蠻簡單的 反正我覺得 如果你有在用這種方法 在玩吹牛的話 或者是任何其他的卡牌遊戲 我覺得你在任何場子 你都有很高的機率會一直贏 我唯一的缺點呢就是 你可能會被討厭 然後或者是人家會覺得你作弊 就像昨天晚上 我就被指控說我作弊 但我真的沒有看 就他們覺得 我這張牌從來都沒有出過 你怎麼可能知道我有 但我很明顯啊 好啦那反正以上就是我的聖誕節 那這幾天呢 我其實還有另外一個想法 就是我覺得大多數人應該都有這個想法 就是這幾天真的是冷到靠杯 就是我覺得跟前幾年比起來 好像也沒有特別冷啊
(10:11~11:11) 但是就是跟幾個禮拜前比起來 就是可能12月初的時候 那個時候不知道為什麼 就是很溫暖 然後之後不知道是哪一天開始 突然有一天就變得超暴冷 然後一路冷到現在 那我覺得大家應該都是會看天氣預報的人吧 對吧 不管你是每天看 還是你重要的日期才會看 你一定會看天氣預報的 那這個天氣預報呢 我們都知道是 交通部的中央氣象署做出來的嘛 對吧 但是他們究竟是怎麼做到這件事情的 你有想過嗎 我覺得這個答案可能會讓有一些人感到驚訝 就是他們其實是使用 超級電腦在做天氣預報 就是平時我們看天氣預報 看起來好像是非常簡單的一個呈現 對吧 可能未來五天的天氣啊 七天的天氣啊 溫度降雨這樣 但其實這個結果是需要用 非常複雜的運算 跟非常強大的超級電腦的算力 我們才可以把這個結果算出來 像是現在氣象署在做天氣預報的這台 最新的超級電腦 他們叫做第六代的超級電腦
(11:11~12:11) 它造價要15億台幣 你每天看的那些天氣預報 簡簡單單的一個數字 是一台15億的超級電腦算出來的結果 你現在有沒有覺得好像 欸好賺喔 這免費看耶 趕快多看一點 每天都來看一下 看越多賺越多這樣 好 但我今天呢其實並不是要講 我們用來算這些天氣預報的超級電腦有多厲害 我反而是要講 有一個新的技術可以取代這些超級電腦 用非常非常少的算力 算出未來的天氣預報 那大家要不要猜一下這個技術是什麼 好我給大家三秒的時間猜一下 321 好公布答案 答案就是沒錯 AI 又是AI 那這個技術呢 是Google的AI部門DeepMind研發出來的 那它這個Paper發出來啊 應該說他們的聲明稿發出來是 11月底的時候吧 所以說已經過了可能將近一個月或是一個月的時間了 對 那我是它剛出來沒多久我就看到了
(12:11~13:14) 但是然後我一直很想講這個東西 但是一直沒有這個機會 所以說 這個禮拜呢終於有一個空檔是 這禮拜可能沒有什麼特別大的AI新聞是我一定要cover的 所以說我就把這個話題拿出來講一下 那我會很想講這個話題是因為 我覺得這個話題值得更多的關注 就是它說真的啦 關注度並不是非常的高 就是很少人在討論這件事 我相信很多聽眾今天應該是第一次聽到這件事 聽到這個天氣預報的AI模型這樣 但我覺得它是非常有價值的一個技術 然後未來是會完全的顛覆現在天氣預報的方式 然後我們從這個技術其實也可以去做一些延伸的討論 因為其實台灣政府現在在這個天氣預報這邊呢 是有一些作為 但是似乎沒有把這個AI模型考慮進去 考慮到他們的計畫當中 對然後這邊是不是會有一些不效率的問題 那這邊我們也可以在討論 OK好 那在我們開始講這個AI的天氣預測模型之前呢
(13:14~14:15) 我們先從我們現在究竟是怎麼做這個天氣預測的出發 那現在呢 全世界國家做天氣預測的方法其實都一樣 都是同一個方法叫做NWP Numeric Weather Prediction 中文叫做數值天氣預測 那這個數值天氣預測的方法你聽名字就知道 它是在用數學模型在計算或者你說是模擬未來的天氣 不管是5天7天還是10天的天氣這樣 那這些數學模型呢 基本上就是基於一些物理的方程式啦 像是一些什麼熱力學啊 流體力學啊 他們推導出來的一些方程式 那整個天氣預報的過程呢 是分成幾個非常簡單的步驟 第一個步驟呢當然就是收集資料嘛 那收集資料這邊就是大家應該都知道啦 就是自然世界中有很多觀測儀器嘛 像是什麼有氣象站啊 氣象雷達啊 探空氣球啊 無人機啊 衛星啊等等 那這些儀器收集了很多資料之後呢 就是包括什麼最基本的溫度濕度啊
(14:15~15:16) 風速啊氣壓等等 收集完了之後呢 氣象局會先把這些資料全部整理起來 然後整理出一個目前的天氣狀況的一個觀察 那我們知道了這個目前天氣的這個現況之後呢 我們就把這個現況直接丟到模型裡面 或者你是說拿這個現況的參數去初始化這個模型 都可以 反正就是把現在我們知道的這些數字 不管是什麼溫度壓力等等 全部丟到這個方程式當中就對了 那接下來呢這個模型的計算啊 這整個模擬的過程呢 當然就是用氣象局的超級電腦在跑 然後跑完之後就得到了一個結果 那個結果就是最後可能5天10天 我們的天氣會怎麼樣這樣 那基本上它在做的事情呢就是 我們人類基於我們對於物理學的了解 然後我們就像是去把所有的這些方程式給找出來 列出來 像是這個大氣怎麼動啊 流體力學啊 然後這個熱能是怎麼流動啊等等 我們全部都把這些東西找出來
(15:16~16:16) 然後再去把這些方程式全部結合起來 因為這些方程式都會互相影響嘛 所以我們還去思考說 欸這些方程式會怎麼樣互相影響 然後最後再把所有東西結合起來 變成一個這個NWP的模型這樣 所以這個模型啊 真的是裡面有非常多這些人類智能的結晶 對它是一個人類智慧的展現 好那這邊你可能會問說 欸那為什麼我們套一套這些公式 我們就會需要用到超級電腦 我們用一般的電腦不行嗎 這其實是因為這個計算量呢 真的是非常的龐大 主要有兩個原因 第一個是模型的複雜度 就是這些數學赤子本身非常複雜 第二個呢就是資料的龐大程度 好那這些模型呢 它本身是非常的複雜的 它如果是一般的Y等於AX加B 那就算了嘛 但很明顯的這些物理模型呢 它是非常噁心的 它們都是非線性的 Y等於AX加B是線性的嘛 那個就是比較好比較好計算的 它們都是非線性的
(16:16~17:17) 然後還有一些什麼偏微分啊之類的 然後我剛剛不是有說嗎 這些方程式 這些不同的物理理論都會互相影響 所以這邊的交互作用的運算也是非常複雜的 就是什麼 就是包括可能大氣中的溫度跟濕度會影響雲的形成嘛 那這個雲它怎麼樣形成 又會影響這個輻射平衡跟降水啊 所以這個NWP的模型 它本身的運算就是挺複雜的 那再來我講到資料的複雜度 就是這個資料的龐大程度 也很大程度的影響它的算力需求 這邊就是因為我們為了在每個地區 要有更精確的這個天氣預報 我們會把大氣層套上一個3D網格 就是把大氣層切成一塊一小塊一小塊的這種豆腐塊的概念 然後我們在做天氣預報的時候 我們在預測的時候 就是以一塊豆腐塊為單位做預測這樣 那當然你這個豆腐塊你切得越細 你的天氣預報的精確程度就越高 但同時你的計算量就越大
(17:17~18:18) 那像是我們台灣氣象署的這個 第六代超級電腦 他們最新的超級電腦 是可以切到一公里的精細程度 意思就是說每個豆腐塊它長寬高是一公里這樣 那我們通常會把這個豆腐塊的大小 稱作空間解析度 解析度越高就是你把豆腐塊切得越細 那這是空間的部分 但時間部分的解析度也會有影響 時間解析度在講的就是 你是以多細的時間間距 作為單位在預測未來的天氣 那你的時間間距如果很小 可能只有一個小時 或者甚至是30分鐘 那就代表你每一個小時你都要做一次預測 或是每30分鐘你就要做一次預測這樣 那今天你的資料有非常高的空間解析度 就是豆腐塊切得很細 然後時間解析度也很高的時候 然後同時因為你要計算的欄位是非常多的 就是包括很多嘛 溫度、濕度、壓力等等 這些全部東西加起來你的資料是會非常龐大的
(18:18~19:19) 那你把這麼龐大的資料丟進這麼複雜的模型 當然你會需要一個非常強的超級電腦 才可以計算這件事情 多強呢? 像我們第六代的超級電腦 我們花15億買的那一台 它最多的算力可以到10到15個petaflops 一個petaflops就是每秒做1000兆次浮點數運算 一次浮點數運算基本上就是 兩個有小數點的數字的加減乘除 基本上就是這樣 那我們第六代的電腦可以做10個petaflops 所以說就是每一秒它可以做這樣子的運算 做1萬兆次 儘管這些電腦這麼的強大 一秒可以做這麼多次的運算 我們今天如果要做一個10天的天氣預報的話 還是要花上好幾個小時 NWP的運算就是這麼的龐大 好那你現在知道NWP是什麼 然後它的流程是什麼 以及它為什麼運算量這麼龐大了 那接下來呢我們來講講 我們來講講谷歌的這個新的AI做法 這個AI做法呢就是谷歌他們有訓練了一個AI模型
(19:19~20:22) 叫做graphcast 那這個graphcast呢就是可以取代NWP的物理模型的部分 就是他們是拿過去40年的天氣資料 訓練出了這個graphcast的模型 然後他說之後就是你一樣收集一模一樣的資料 然後你把這些資料改成放進這個graphcast的模型當中 然後這個graphcast會一樣產生出未來天氣的預測 一樣是以這個3D網格的形式在做預測這樣 也就是說呢我們人類不用再去學那些物理的東西了 我們不用再絞盡腦汁想說這些 每一種這個熱跟氣是怎麼樣運作的 我們不用了解這些東西了 我們全部就讓AI自己去學 我們也不用跟AI講什麼物理的概念 我們完全不用打任何一個物理的方程式給AI 我們就是把這個AI建出來 然後定義它的參數啊 你可以把它想像成它的腦容量 我們定義它的腦容量 然後它要怎麼樣學這樣 我們把這些東西定義完之後
(20:22~21:23) 讓它自己從資料裡面學說未來的天氣應該要怎麼樣做預測 那這個AI模型相比我們現在使用的這些NWP的模型 它的使用成本非常非常的低 你不用一台超級電腦了 你只要用一塊晶片 一塊TPU V4的晶片 你就可以做一個十天預測了 如果不知道TPU是什麼 你可以去聽前一集 前一集我正好講到這個Google的TPU嘛 我講得很細 但你不知道的話也沒有關係 反正一塊TPU的晶片就是一個TPU的處理器啦 那一個超級電腦可能有幾千個TPU的晶片 但是我們今天只要用一塊一個 我們就可以用我們就可以跑GraphCast了 而且速度也是快的驚人啊 我剛剛有講嘛 我們跑NWP的模型的時候 我們要用超級電腦 然後跑好幾個小時 我們才可以做一個十天預測 今天你要跑 你要用GraphCast做一個十天預測 你只要用一塊GraphCast 一塊TPU的晶片 然後你花不到一分鐘 你就可以做一個十天預測了
(21:23~22:23) 好幾個小時對比不到一分鐘 然後一整個超級電腦對比一塊晶片 你看這個運算成本真的是 已經降到0.000001%都不到 那你如果對於AI模型的大小 有一點概念 我跟你們講啊 這個GraphCast 它就是一個36.7Million 參數的模型 對比我們現在跑的這些大型圓 模型隨隨便便都Billion起跳 的這些大型圓模型 36.7Million參數的模型 真的是小不拉機啊 那你聽到這邊你接下來可能會想要挑戰的一個點就是 GraphCast 它預測的準確率怎麼樣 因為你的運算成本 變得這麼小 你可能要犧牲一點準確率吧 怎麼可能你運算成本小成這樣 結果還一樣準不好意思 GraphCast比NWP的模型 還更準 Google他們論文裡面有比較 它其實是拿GraphCast跟 歐洲的一個NWP的模型做比較 那它比較結果是這樣 GraphCast在90%的預測上
(22:23~23:23) 是比NWP還準確的 然後假設你今天把高度 限制在對流層而已 就是 對流層就是大氣層中 最靠近地面的那一層 也是天氣預報最重視的那一層 你只侷限在這一塊的話 GraphCast在99.7%的預測上 比NWP還準 意思就是說 完勝NWP的意思 而且Google還有說他們在實測的時候 發現GraphCast在 極端氣候狀況的預測 是比NWP準非常多的 他們有說在遇到 這個Hurricane Lee的時候 這個Lee颶風的時候 這個是實測喔 意思就是說他不是拿以前的資料在做模擬 在跑他的成績而已 是實際NWP跟GraphCast 同時都deploy的狀況之下 都部署都已經在 跑的狀況之下 GraphCast在9天之前就已經預測了 這個颶風的走向 那這個傳統的NWP模型 則是6天之前
(23:23~24:23) 他才有這個足夠的信心 預測他的方向 所以說這個就是很屌的 首先第一個就是 這是實測 就是你要知道AI模型 他的訓練期間的 測試的成績啊 他是非常好被操弄的 所以說你看到訓練成績的時候 你都要抱持一絲懷疑之心 因為他是很好調高的 有時候甚至也不是刻意調 可能就是不經意的 訓練資料切的不好 或者是樣本抓的不好啊 甚至他訓練資料的時候 訓練的期間的成績是很好的 但是他放到實測就爛掉了 那今天GraphCast是在 實測上勝過了NWP 這是很厲害的一點 另外一個很厲害的一點呢就是 GraphCast在訓練的時候沒有 特別為了極端氣候做準備 但是他在實測的過程中呢 竟然可以非常好的辨識這些 極端氣候 這種狀況我們通常會說 這個模型已經generalize了
(24:23~25:23) 已經有點像是把氣候預測這件事情 融會貫通了 所以說就算是他沒有見過的 他很少看過的這種情況 他也是可以非常準確的 做出預測你聽到這邊你不覺得 真的很厲害嗎AI真的是非常 厲害的一個技術 就是他用這麼簡單粗暴 的一個解法不學任何 一點物理的概念 他竟然可以做得比NWP 還好可以做得比這個人類 智慧的結晶還好 我們說他沒有學 這樣講也不算精確 我覺得應該是他沒有刻意去學 但是他從這些 過去的資料在找規律的過程中 我覺得他算是有間接的 學到了這些概念 但是他理解這些概念的方式 跟人類理解這些概念的方式 是完全不一樣的 而且我們無從得知他們 他們究竟是怎麼理解這些概念的 我們不知道因為AI就是一個黑盒子 應該說這種AI 是一個Graph Neural Network 也就是一個神經網路
(25:23~26:23) 一個神經網路基本上就是一個黑盒子 因為它基本上就是一大坨數字 它是36 million個參數 所以3600萬個參數 那每個參數 基本上就是一個數字而已 一個輔點數 一個有小數點的數字 那幾千萬個這種數字 堆在那邊它有什麼意義 我們人類完全看不出來 但是這個AI確確實實的 學到了這些數字 學到了這些天氣預報的物理概念 我覺得這真的是非常非常神奇的一件事情 那我剛剛有講到 他用的這個神經網路 是叫做Graph Neural Network GNN的一個神經網路 那我這邊簡單做個GNN的技術介紹 聽不懂沒關係啦 我會講很快 這邊主要就是講給那些Machine Learning的狂熱分子 聽的就類似我這種狂熱分子 聽的 那GNN它就是一個神經網路的一種 你看到NN這兩個字 就是NN 那每一種神經網路 其實都大同小異
(26:23~27:23) 就是它真正神經網路的那個部分 我們叫做Fully Connected Layers 那邊基本上都差不多 就是一大堆線性的 跟非線性的函式 組合在一起基本上就是這樣 那它們不一樣的地方呢 基本上就是在於它們怎麼樣處理資料而已 它們怎麼樣把 它們這個領域的資料呢 變成一個神經網路吃得進去的東西 也就是一個限量 這樣 那GraphCast用的這個神經網路呢 是叫做Graph Neural Network的一種神經網路 那這種神經網路呢 你聽名字就知道 它就是在處理GraphData的 所謂的GraphData 其實就是有很多的點跟線 組成的一種資料 那具體來說應該是 Node跟Edge 就是它的專有名詞是Node 它的線就是這些點 怎麼樣互相連結 是叫做它們的Edge 但是我覺得中文用點跟線來講 可能會比較好懂 那通常你的資料如果有
(27:23~28:23) 很多很多個個體 然後這些個體都有各自的這些特徵 然後同時這些個體也會有 一些互相影響的部分 這種資料就很適合用Graph來呈現 一種最常見的GraphData 是什麼就是Social Media Social Media就是很多很多的人 然後這些人 互相都有一不一樣的關係 連結起來 他可能是他的好友,他可能是封鎖他 他可能是他的親戚這樣 然後今天這個GraphCast就是用 GraphData來代表天氣 的狀況天氣的網格 就是我們剛剛把這個 大器切成很多個豆腐塊 那這每塊豆腐塊就是一個Node 然後每塊豆腐塊 也是互相影響是非常緊密的 但他們同時 各自的狀態 包括溫度濕度壓力等等 那當你用GraphData的形式把 這個天氣資料丟進神經網路的時候 神經網路在學的時候 他就會同時把 這每一塊豆腐塊他自己有哪些特徵 以及他周遭的豆腐塊
(28:23~29:23) 有哪一些特徵 然後會怎麼樣互相影響 這些事情全部都學進去 這個就是GraphData的精髓 GraphNeural Network的精髓 你今天假設是把每一個 豆腐塊全部都直接用一個 向量來代表的話 然後那個向量裡面就是放他的濕度壓力 什麼...你如果把他們都 視作一個一個獨立的豆腐塊的話 你就學不到這些豆腐塊 會怎麼樣互相影響的這個 關聯當然也不是說絕對學不到 就是也有一些其他方法 可能你可以用什麼Attention之類的 但是他不會像是 GraphData這樣子這麼適合 好那技術的部分 我就簡單講到這邊 希望大家還沒有睡著 那我們剛剛已經講過了 就是這個GraphCast 它的使用成本呢 跟NWP比起來是非常低的 基本上呢 就是讓未來的天氣預報 不會再依賴超級電腦了 那這樣你會不會覺得 假設今天有一個政府決定
(29:23~30:23) 在今年...應該說明年 開始他還要繼續買超級電腦 然後在九年之內 一直買超級電腦 所以說這個政府感覺 有點沒有遠見 那今天確實有一個政府在做這件事情 也就是我們台灣的政府 對就是中央氣象署 他已經拿到了預算 要在未來的九年 就是從2024年開始的 未來九年要再買 三台超級電腦 一台15億要買三台 也就是要花45億 那這三台超級電腦呢 全部都是拿來做天氣預報的 來月系的天氣預報 因為他們都是比現在我們在用的 第六代超級電腦是更強的嘛 他們是第七代第八代第九代的 超級電腦 所以說他們會做解析度更高的 天氣預測 不管是空間解析度還是時間解析度都好 都是做得更高 然後做得更快 但是再快也不可能比Graphcast更快 那你可能會說
(30:23~31:23) 這個Google的部落格文 11月底還是10月中的時候 才寫出來 那政府在這之前又不知情 也不能怪他們嘛對不對 其實我去查了一下 這個Graphcast它的paper 它第一次出現在網路上 是在Archive上面出現 Archive就是一個大家隨便任何一個人 都可以publish它 也不算publish啦 它就是可以把它的論文上傳到這個網站 叫做Archive上面 那Graphcast第一次出現呢 是2022年的12月24號 正好就是一年之前 那氣象署呢 有一年的時間可以改變這個決定 或是他們其實是在這一年之內才做這個決定的 很明顯就是沒有注意到這篇論文 當然我覺得這也不能怪他們啦 畢竟這個Archive 上面論文很多很雜 我剛剛不是有說嗎 隨便誰都可以在上面publish論文嗎 那這篇Graphcast的論文 在去年年底publish到Archive之後呢 經過一年的時間 它在上個月呢
(31:23~32:23) 就在11月Google發布的那個時候 它是被刊登上了Science的期刊 那今天都上了Science這種 國際知名的期刊 我覺得該看到的人應該都會看到了吧 我是真的很希望政府可以認真地去思考 這項決定啦 因為45億納稅人的錢 真的不是小錢耶 好不好 雖然說我也覺得台灣不太可能在明年就搞出這樣Graphcast的一個AI模型 但是九年的時間 它就不可能在明年就搞出這樣Graphcast的一個AI模型 但是九年的時間 但是九年的時間還搞不出來嗎 絕對不可能一定有的 但是你九年之內 你要買三台超級電腦 你Graphcast出來之後 你根本就是你氣象鼠 一個隨便一個長官 的桌上的一台電腦 就可以跑Graphcast了 真的不用花這麼多錢 而且你知道用來計算這些NWP模型的 這些超級電腦 都是CPU based的超級電腦 這是什麼意思呢 因為你買過來之後 還不能拿來train AI模型
(32:23~33:23) 還不能拿來跑AI 所以說你不可以說是 可能多買了三台超級電腦 然後最後變成Graphcast之後 你就直接把那些超級電腦 拿來訓練Graphcast 不行喔,你要訓練Graphcast 你還要另外去組一個 GPU的超級電腦 或者是去買雲端的資源 所以我自己真的是覺得 這45億真的會有很大一部分是浪費掉的 所以這就是我們 政府官員對於AI發展 無知的一個結果 那當然啦,我覺得在大家開始痛罵政府之前 我也必須先說明一件事情 就是今天要在台灣 使用Graphcast也不是立刻 就可以達成的事情 也是有一些阻礙的 第一個,谷歌目前的Graphcast 它的解析度其實不是很高 它的解析度是0.25度的 精緯度的解析度 換算成KM KM的單位的話 差不多是28KM x 28KM的 這種網格 那目前台灣的
(33:23~34:23) 第六代超級電腦呢 可以做到的是3KM的網格 所以說3KM跟28KM 還是有一段距離啦 目前這個谷歌的Graphcast確實 沒有辦法做到台灣的天氣預報 的要求,那谷歌的Graphcast 之所以會這麼粗的 解析度呢,是因為它 訓練的資料本身就是這個解析度 它有這個資料的限制 就是它那時候使用的訓練資料 它只能使用這個ERA5 的training data 應該是這個歐洲的天氣的 資料啦 這個資料本身就是這個 28KM x 28KM的 然後再來就是他們也沒有辦法用 解析度更高的資料 因為他們,這邊我們不清楚 因為他在論文上他只模糊帶過 他講這句話,他講說 There's engineering challenges in fitting Higher resolution data on hardware 意思就是說他有一些硬體的限制 我在想應該就是一些RAM 的限制啦,對,然後同時 你也要知道就是就算今天 Graphcast它的解析度是
(34:23~35:23) 夠的,我們也不能直接拿Graphcast 來跑台灣的天氣 預報,台灣要training自己的 Graphcast,台灣版的Graphcast 因為這些Graphcast會有地域性 地區性,意思就是說今天 台灣要有一個自己版本的Graphcast 要有三個最重要的事情 第一個就是我們需要有資料 我們要有高解析度的 台灣過去40年 或甚至是更久的 這個天氣資料 再來我們要有運算資源 我們要有足夠的電腦 足夠的算力去 訓練這個模型 最後我們要有人才 我們要有夠聰明的人 夠懂AI的人來做這個training 我覺得這三件事情 我自己覺得,首先資料 這部分我不是很確定 我不確定資料,這個氣象署 它有沒有把 它是用什麼樣的格式,什麼樣的方式 把歷年的資料存下來 這邊我不確定,但是至少 運算資源跟人才這邊 我覺得都可以在一年之內搞定
(35:23~36:23) 然後搞定了之後,真正訓練模型的時間 也非常的短,因為它是一個很小的 模型嘛,它不像是 幾百個billion 參數的那種 大型運動模型,會需要training8個月 或是12個月之類的 你一下就可以training好了 然後你一年之內training好這個模型 然後在接下來的兩年之內 進行這個模型的試跑 不斷的再訓練,一直微調 你第四年之後 我覺得很有可能就可以 開始慢慢的face out這個 NWP的模型了 說真的,我覺得這個時間 我已經抓得是很寬裕了 其實我都抓個兩年時間 試跑,我覺得甚至應該是不用這麼長 我不確定啦,但我猜可能不用這麼長 但反正再怎麼算 都可以在九年之內做成這件事情 那你九年蓋超級電腦三台 三年蓋一台 那你這樣子蓋完之後的情況 就會變成說,你有一台電腦 蓋完之後是完全用不到 然後還有一台電腦,才剛蓋完 就要face out,然後還有一台電腦
(36:23~37:23) 蓋了只用了一兩年 你要知道超級電腦,它的壽命 至少也有可能 十年左右吧,你這樣不覺得 你真的是浪費了很多錢嗎 而且假設你把 這個45億的超級電腦預算 你隨便抽個幾億 拿來補助你要做的 Graphcast的project的預算 根本是綽綽有餘啊,對吧 你幾億元 幾億元的預算,你可以請到全世界 最強的AI研究員 好不好,你請到這些AI研究員 然後因為這個模型又沒有很大 它硬體的運算需求 也沒有那麼多,反正怎麼想 都覺得這個預算分配 不是很有效率 當然這邊我可能有講錯 我覺得有可能 台灣的中央氣象局 現在有一批人,他已經有請一些AI研究員 在研究Graphcast了 這是很有可能的,只是我們不知道而已 但我覺得假設他們沒有 這麼做的話 我這邊真的是奉勸他們 你們真的要來看一下Graphcast這些東西
(37:23~38:23) 要看一下AI的可能性 我覺得現在一般大眾 有些影片缺乏一些 對於AI的重要認知 首先,第一個就是 我覺得大家要知道,只要有足夠的資料 AI什麼都學得會 我指的什麼都學得會是 真的是什麼都學得會 這是因為我們現在講的AI 很多這種非常強的AI 它背後都是神經網路 對吧,這個在我們科技量的Podcast 已經不知道提了幾百次的 一個東西,叫做神經網路 那這個神經網路呢 我覺得你不懂它的技術層面沒有關係 但你要知道一件事情 你要知道它的本質是什麼 它的本質就是一個 Universal Function Approximator 意思就是說,它可以用來 逼近全世界上 任何一種函式 一個函式是什麼,函式就是 定義了這個input跟output 之間的規則嘛,之間的 這個關聯嘛,那你仔細想一想 其實世界上任何東西 全部都是函式,對吧
(38:23~39:23) 你今天下雨了,然後地板濕了 這個就是一個函式啊 對吧,就是地,乾的地面 加上雨水,等於濕的地面 這個就是一個函式啊 然後你今天在聽我的Podcast 你耳朵聽到我的聲音 我的聲音是你這個input 然後你有一段聽得不太清楚 你按回播15秒,這件事情就是一個函式啊 你的input就是 我在你耳朵講的話嘛 然後你的output就是你 手去按回播15秒這件事情 所以一個神經網路 只要有正確的input output資料 它是可以逼近 任意函式的,世界上 所有的函式,它都可以逼近 然後也因為世界上所有 事情都可以被定義為一個函式 所以AI什麼都 學的會,我覺得大家應該都要 有這個認知,你才會對於AI 的潛力有更深的理解 它能做到什麼事情有更深的理解 因為基本上它什麼事情都做得到 然後再來我覺得大眾應該要 對於AI要了解的事情是 我覺得大眾應該要知道
(39:23~40:23) 科技它進步的速度 有多快,這邊你要做的事情 很簡單,真的很簡單,你就是拿 過去的成長速度 拿來跟現在比,你就可以 合理的估計未來的成長速度 未來的成長速度可能更快 可能變慢,但你至少有個合理 估計啊,這件事情其實很簡單 但我覺得一般大眾都想不到 我也不知道為什麼,那最簡單的 就像是,你看硬體怎麼樣成長 你就看什麼,你看摩爾定律啊 雖然說有些人說摩爾定律 現在已經死了啊,就是 我們可能快接近物理極限了 但我覺得還有好幾年啦 反正不管啦,你就從 這個摩爾定律去做個合理的預測 你就可以知道未來的一年 兩年三年五年,你的電腦 你的手機,它的處理器 的能力可以做到什麼程度 那軟體的部分呢,你看一下 我們從LXNET,十年前的LXNET 到現在這個 CHAT GPT,GPT4V好了 從一個簡單的影像辨識AI 到現在這個 非常聰明,可以回答
(40:23~41:23) 生物20PiR到99% 的準確率的這種AI 我們花了十年的時間,對吧 然後這十年的時間,我們的一個模型呢 從幾千個 Million的參數 到現在可能要有一千個Billion 就是一個Trillion參數了 那在十年之後呢,是不是代表我們 很有可能擁有一千Trillion 參數的一個AI模型,對吧 那有一千Trillion參數的AI模型 它可以做到什麼事情 當然啦,這邊沒有一個人有正確答案 但至少你現在有一個很合理的 估計了,對吧,你至少有個 範圍出來了,然後有一個 比較明確一點的方向了 所以我真的覺得大家都要多多思考 這兩件事情,就是思考 要,應該說有這兩個 這兩個認知啦,就是AI 是什麼都學的會的,而且AI 的成長應該是這樣子的一個 有了這兩個認知之後 你再去思考,現在做什麼樣 事情,才是最正確的 我相信,你真的有做這樣子思考的話 你可能就不會想要在九年之內 買三台超級電腦
(41:23~42:23) 好啦,最後還是跟大家說一下,聖誕節 快樂啊,雖然說我們在台灣 聖誕節還是要上班 是有點靠杯啊,而且搞不好 這個天氣還很糟糕 但是呢,往好處想嘛 再撐一個禮拜,就跨年了 那跨年完之後呢,再撐一陣子 就放年假了,對吧 所以大家要好好加油 那你如果喜歡這集Podcast的話 請幫我五星好評加留言 跟我互動一下,然後也請幫我把 科技浪分享給你的好朋友們 最後呢,也是再次感謝一下 今天的贊助商Uni Papa 大家可以去資訊欄連結,看一下 他們的延長線,想要買的 也別忘了輸入科技浪這個 折扣碼,可以再想八五折 那假設你是廠商的話,然後你想要 贊助科技浪,你可以在我的資訊欄 連結裡面,找到科技浪 網站的連結,這網站裡面 有非常詳細的合作資訊 就是有包括科技浪的這個 收聽數據,聽眾的 這些輪廓,然後還有我合作的方式 你們可以參考一下 然後寄信給我,我會再跟你們談下一
(42:23~42:27) 步這樣,那最後呢,也是 祝大家有個愉快的一周,然後我們
