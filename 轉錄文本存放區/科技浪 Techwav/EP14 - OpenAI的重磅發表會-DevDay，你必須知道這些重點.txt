(00:00~01:00) 【音樂】 哈囉大家好 歡迎收聽科技浪 我是主持人哈利 科技浪是一個白話跟你聊科技的Podcast 希望可以用簡單易懂 但是又深入的方式 帶你了解時下最火的科技話題 【音樂】 本集節目由M觀點贊助播出 M觀點是一個主要在聊科技商業投資相關主題的Podcast 那這檔Podcast呢 也是我從兩年前就開始聽了 然後一直聽到現在都還有在聽的Podcast 然後同時也是我唯一一檔有在聽的台灣的Podcast 我會一直聽下去是因為這個Podcast真的是講得非常好 那我們在講這個Podcast本身之前呢 我們先介紹一下這個Podcast的主持人Mula好了 Mula之前有在一間遊戲公司做過CEO 然後也有在這個遊戲局子負責過《風之谷》的台灣發行上市 然後現在則是有一間媒體公司 旗下除了他的頻道以外 還有一些其他的頻道 像是《英雄說書》 那Mula他的Podcast我已經聽了兩年了嘛
(01:00~02:01) 然後前一陣子也跟他吃了一次飯 我覺得他本人真的就是非常聰明很厲害的一個人 那他這一檔M觀點的節目呢 之所以會合我胃口 是因為首先他有很強的批判性思考能力 我覺得這點算是我在追蹤任何一個KOL的時候的一個很硬的一個門檻 你一定要能夠有批判性思考能力 我才信得過你 你如果都沒有批判性思考能力 就是被媒體牽著鼻子走 那我看你的節目幹嘛 我自己去看媒體就好了 那Mula絕對是有非常強的批判性思考的一個人 媒體講錯什麼事情他就會糾正 然後今天儘管是他自己非常喜歡的公司 做了一些莫名其妙的事情 他也會批評 然後再來Mula分析事情真的是非常深入的 他絕對不會只看表面 他會深入的進去挖說 欸這件事情是真的嗎 這件事情它的發生原因是什麼 為什麼會有這件事情發生 以及這件事情發生之後 未來長什麼樣 它會怎麼樣影響我們 我覺得這些都是我自己在看一些事情的時候 我會想看的面向 我會想回答的關鍵問題 然後Mula通常都會幫我回答這些問題 然後再來很重要的一點就是
(02:01~03:02) 他在回答這些問題的時候 他做的分析都是有憑有據的 都是憑事實憑數據跟邏輯在說話的 這點也是我超care的一點 然後也是我覺得Mula做的真的很好的一點 就是任何事情 我不會因為你是誰 我就你講了我就相信 我一定要看到數據我才會相信 而且通常看到數據還不夠 我還會挑戰兩個點 第一個是這個數據怎麼來的 你怎麼收集到的 第二個就是這個數據你怎麼解讀的 這樣解讀是正確的嗎 我覺得這個當然跟我上一份工作很有關 就是之前在做data scientist的時候 真的是每天就是一直看數據 看數據看數據看數據 然後看久了你就會知道數據的使用 數據的解讀是要非常嚴謹看待的一件事情 因為有太多的因素 可能會影響這個數據的呈現 跟這個數據的解讀了 像是人為的偏見統計上的偏見 然後數據的收集過程中 可能也會出現一些問題 所以我覺得相比一般人 我看數據真的是比較嚴謹一點 我的標準比較高 就是任何媒體上的數據 我看到我一定不可能當下就相信 我一定會先挑戰它
(03:02~04:03) 然後把我想問的問題問過一遍 然後check過一遍之後 然後我才敢相信 那Mula它對於數據的解讀 就是我可以信得過的 它會把它解釋這個數據的邏輯講出來 就是為什麼不能看這個數字 這個數字它可能有什麼統計上的偏誤 我們應該看另外一個數字 然後這個數字裡面可能包含了ABCD 但拿掉C跟D之後 這個數字就會大幅的改變 然後儘管今天它有講的事情 沒有直接的數據可以佐證 它也會用一連串非常符合邏輯的 事實跟假說 導出它現在的這個結果 它現在的這個假說 然後最後呢 我還有一個很喜歡聽Mula節目的原因 就是Mula它的人生歷練跟它的見識 真的比我多太多了 我覺得今天如果單看AI這個領域 我有自信我一定是看得比它深啊 但是在一些科技公司 它的其他事業的部分 或者是這個科技以外的一些時事 我覺得它都比我懂非常多 然後我通常可以從它這邊學到非常多東西 尤其是看財報的部分 就是Mula它最出名的 就是它分析科技巨頭財報分析的很好 它還有在經營一個付費電子報
(04:03~05:04) 叫做科技巨頭解碼 主要就是在分析這些科技巨頭財報的 好那以上就是這個M觀點跟Mula的介紹 如果你想聽一個很厲害的人分析 科技與商業投資相關的時事 我很推薦大家去聽M觀點這一檔Podcast 你在任何的Podcast平台 包括Apple Podcast, Spotify, YouTube 你都可以找到這檔Podcast 那我們業配時間就到這裡結束 謝謝M觀點的贊助 好那今天的主題 我已經在我的IG預告很多次了 我們就是要來聊爆OpenAI的開發者大會 OpenAI的DevDay DevDay當然就是Dev 就是指Developer 所以說就是一個開發者大會的意思 那如果你還不知道的話 OpenAI是在五天前 就是上禮拜二或是禮拜三的時候 舉辦了這個DevDay 那這個DevDay也算是他們的第一屆的開發者大會 他們第一次有這種發表會 然後在這個發表會中 整個Kino大概四十幾分鐘 在YouTube上面都可以看得到 那他們主要發表了 他們現在既有產品的一些進步 包括技術的進步 資源的功能的進步
(05:04~06:05) 還有降價的部分 然後他們也發表了很多新的產品 最有名的當然就是GPT 還有GPT Store 那這個OpenAI的CEO Sam Almond 發表完了之後呢 他做的第一件事 竟然是上X去嘴馬斯克 我真的完全沒有意料到這個 我知道Sam Almond是很Sarcastic的一個人 他就是他很喜歡講諷刺的話 但我真的是第一次看到他這麼直接的開砲 你知道嗎 就是馬斯克前一陣子有成立一個AI公司 叫XAI 那他XAI上禮拜呢 就發表了他們的第一個大型語言模型 叫做Grok 那這個Grok他們給出的其中一個賣點就是 他是一個幽默的AI 就是他其實有兩種模式 一個是一般模式 一個是幽默模式 那幽默模式呢 他講話就比較幽默一點 然後也敢開一些 可能其他的聊天機前不太敢開的玩笑 那Sam Almond怎麼諷刺他呢 他就是首先你要知道 就是他這次發表會有發表其中一個產品叫做 GPT 他就是你可以客製化你自己的一個GPT
(06:05~07:06) 他有一個使用者介面 你只要跟這個GPT Builder講說 你想要建一個怎麼樣的GPT 這個GPT Builder就會幫你建出一個這樣子的GPT 然後Sam Almond就PO一張照片是 他跟這個GPT Builder說 反正就是叫那個GPT Builder建一個 聊天機器人是會講很尷尬的 很有老人味的笑話 然後這個GPT Builder就說 OK沒問題 那我們來建一個叫做Grok的聊天機器人好了 然後旁邊就出現了這個Grok聊天機器人的頁面 然後下面寫著一個title是 就是我講你阿公等級的笑話 就是這樣 反正整件事就是在諷刺馬斯克的AI 很有老人味 然後講的笑話很尷尬 那馬斯克當然也不是坐以待斃了 他以他的個性 他怎麼可能不反擊 他是直接回覆Sam Almond這篇推文 然後他是在下面寫了一段
(07:06~08:07) 在嘴GPT-4的文章 然後文章最下面標註說 這一段是Grok在嘴GPT-4 然後真正好笑的事情是什麼 你知道嗎 就是他這一段笑話 完全就印證了Sam Almond的講法 就是他這一段Grok在嘴GPT-4的文章 根本就是很有老人味很尷尬的笑話 他的文章的第一句就是 GPT-4 more like GPT Snore 那個Snore就是打呼的意思嘛 所以說他說GPT-4是GPT Snore 就是在笑這個GPT很無聊 所以我覺得其實蠻有趣的 就是蠻有智慧的 他可以講出這句話 但真的是有點老人味啊 然後馬斯克可能還覺得他這樣嘴不夠 或是他覺得這邊其實有點 不小心是拿石頭在砸自己的腳 所以他過了幾天 在今天早上的時候 他又PO了一個梗圖 那個梗圖就是兩隻狗在一起的畫面 然後有一隻狗是把他的蛋蛋 放在另一隻狗的額頭上
(08:07~09:09) 然後那個在下面的那隻狗 就是下面寫說CHAT GPT 然後上面的那隻狗呢就是 下面寫說GROCK 就是GROCK把他的蛋蛋 放在CHAT GPT的額頭上的意思 那當然這個梗圖沒有什麼特別的意義啊 沒有太深的含義 然後我覺得也 我也看不出他是在諷刺什麼東西 我覺得就是一個 很直接很幼稚的一個梗圖 那他們這些互嗆 我自己是看得很爽啊 就是我最喜歡推特的 我最喜歡EX的一點 就是上面有這種Drama 超多的Drama 這種Drama的存在就是 我覺得EX比THREAT好用很多 好玩很多的很大的一個原因啦 就是祖科伯想把THREAT 營造成一個非常友善的環境嘛 就是大家對彼此都很Nice啊 都不會講什麼難聽的話 然後到處看都是 芬芳的花香跟這些 藍天白雲草地 然後推特呢就像是一個戰場 大家都拿著手榴彈跟機槍在互掃對方 雖然說確實就是 跟一些主流媒體講的一樣
(09:09~10:09) 真的因此在推特你可以看到一些 比較多的負面情緒負面的想法 然後有時候用真的是會影響你的心理健康 但我覺得啦 一個戰場就是比一個 藍天白雲什麼事都不會發生的公園有趣多了 那當然這個這幾天在EX上面呢 除了這個馬斯克跟Sam Almond在互嘴以外 其他大部分的人在講的事情 都是OpenAI的Death Day 當然這跟我自己的推特的演算法很有關係啦 就是我的推特基本上是 就是Machine Learning的推特跟Tech的推特 所以我看到很多OpenAI Death Day的東西當然是很正常 但是我覺得儘管在這個Community裡面 也很少有這種Event 是會讓大家連續講一整個禮拜的 那OpenAI Death Day完全就是這樣 就是這一整個禮拜從禮拜二到現在 每天開這個EX 都看到一大堆Death Day的東西 那其中當然很多討論很多人是 基本上是在跟風啦 就是會喜歡下一個很聳動的標題 然後隨便貼一大堆莫名其妙的應用
(10:09~11:11) 也不確定它是怎麼做到的 然後也不確定它這樣子做到底有沒有價值 然後超級Cherry Pick出最好的結果 Cherry Pick的意思就是 你試一個東西可能試100次 然後你其中有一次 出了一個奇蹟般的結果 超級好的結果 然後你就選那個而已 然後就很多人會PO這種文去 騙讚啦騙點閱數 因為現在EX可以收錢嘛 但是除了他們以外哦 真正聰明的人確實也都在認真討論這個Death Day哦 從這裡你就可以看出 Death Day真的是一個很值得討論的一個Event 然後確實我剛看完的那一刻 我有發一則限動嘛 我那時候我就覺得這個Open AirDeath Day 絕對是我們這禮拜科技浪一整集的主題 那這個Death Day之所以會這麼值得聊呢 不只是因為它發表的產品 對於大家的implication都很多 就是大家都會因為這個產品而受到影響 未來的生活可能會因此而很大程度的改變 但同時我們也透過這個Death Day 我們更深入的可以了解Open Air這間公司 他們的能力究竟到哪裡
(11:11~12:11) 以及他們的野心究竟到哪裡 然後他們計畫怎麼樣實現這個野心 那當然啦我今天會帶大家很詳細的講解 然後分析它這個Death Day 推出的所有重點產品跟重點的產品升級 然後同時也幫大家做一下這個 Open Air這間公司它的深度分析 但在我們開始分析之前呢 我想先直接跟大家講一個 我自己分析完之後我產生的一個想法 就是我覺得假設Open Air今天是一間 已經上市的公司 然後它沒有profit cap 意思就是說它就跟其他公司 其他上市公司一樣 你投進去的錢它翻了幾倍 你就可以賺到幾倍的錢 因為Open Air目前的組織架構是有profit cap的嘛 這個我好像是在第十集的時候吧有講過 那假設它沒有 而且它是一間上市公司 我可以買它的股票 我絕對買爆它的股票啊 因為我分析完之後的結論是 我覺得Open Air絕對有很高的機率 可以變成一個科技巨頭 就像是現在這種 Google、Meta、Amazon、Apple這種
(12:11~13:13) 超級龐大的公司 當然我這邊講的很高的機率 還是relative的 還是相較之下的 就是成為科技巨頭 本來基本上就是一個類似奇蹟的存在 儘管你一直做對的事情 然後什麼事情看起來都對你好 你還是很可能失敗 所以說成為科技巨頭的可能性 是微乎其微的啦 但是它相比其他所有公司 已經有非常非常高的機率了 那當然這邊是我自己的想法 我其實還沒有看到 其他人有跟我一樣的想法 或者是類似的想法 但我自己認真覺得是這樣 那這部分呢 我們待會會做一個非常完整的分析 到時候大家可以再聽聽看 我為什麼會這麼想 然後大家也可以給我一點回饋 就是你覺得是如何 你覺得你支持我的想法嗎 還是說你不同意 好那我們就先從 OpenAI整個Death Day 他們發表的東西開始講好了 那我覺得他們所有發表的東西 可以大致分成兩個部分 一個部分是現有產品的進步 另外一個部分是新的產品
(13:13~14:15) 也就是所謂Agents的產品 那當然這個界限是有點模糊的嘛 因為嚴格來說 這些Agents這些新的產品呢 也算是舊有產品的延伸啦 那我們就先從這個 現有產品的進步開始講好了 那這邊我覺得有三個大重點 第一個大重點當然就是GPT-4 Turbo 這個GPT-4 Turbo呢 當然就是他們現在GPT-4模型的升級版 主要有升級三個地方 第一個地方是 它有更近期的知識 就是它的知識Cutoff是到2023年4月 也就是說 你可以開始問它一些很近期的知識了 就比如說你問它說 What is Llama Llama就是臉書的大型語言模型嘛 那那個是在今年2月的時候出來的 那在原本那一版的GPT呢 他們可能只有Train到2021年的知識 那它就沒有辦法回答出來 它現在可以 然後這部分是 你如果買ChatGPT Plus的話 你可以使用那個GPT-4的模型的話 你問它它的Knowledge Cutoff 它也是到2023年的4月
(14:15~15:15) 所以說我不確定這個 這是不是代表你現在用的GPT-4是 GPT-4 Turbo 還是說他們把原本的GPT-4模型的Knowledge Cutoff 也更新到2023年的4月 那這邊我沒有仔細去研究 因為我覺得不是很重要 因為GPT-4它的主要賣點其實不是這個 它主要賣點是之後我要講的兩個 分別是長Context Window 非常長的Context Window 高達128K 也就是12萬8千的Context Window 然後還有第二個就是 ATI大降價 那首先這個128K的Context Length Context Window 我覺得基本上就是讓它變成了 現在大家常用的聊天機器人當中 Context Window最長的一個 這邊你如果不知道什麼是Context Length Context Window 你可以去複習一下我們的EP12 我有比較詳細的講解 但這邊幫大家回顧一下 就是基本上你可以把Context Length 想像成你在問問題的時候
(15:15~16:17) 你可以丟多少的參考資料給這個AI 那在這個GPT-4 Turbo之前呢 我們原本的王者是Anthropic的Clawed 它可以到100K的Context Length 但今天這個GPT-4 Turbo可以到128K 所以說換算成實際的文字的話 大概是一本300頁的書這麼多 意思就是說你在用它的時候 你可以附上一本兩三百頁的書 然後問它一個這個書中的問題 但當然他們都只會講到這裡 就會講到說 哇這個128K相當於多少頁的書 多強多強 他們只會講到這裡 然後大部分人也會覺得 哇好強喔好強喔 但如果你有聽我的EP12 你就知道很多這種非常長的Context Length 它是虛假的 就是它雖然說你真的可以丟這麼長的文章進去 但它並不會每一個句子它都讀得很熟 它中間可能會辣掉一大部分 我們常常看到的現象就是 這種很長Context Length的語言模型
(16:17~17:17) 它通常在文章的最一開頭跟最後面 它會讀得比較熟 就是你問它這一個部分的問題 它可以答得比較好 但文章的中間它可能會辣掉很大一部分 那這件事情其實是很好測試的 你只要做一個分析叫做 Needle in a haystack analysis 你就可以馬上分析這件事情 Needle in a haystack 就是Needle就是針嘛 然後haystack就是茅草堆啊 所以在草堆裡面藏一根針 意思就是說 你在這整個文章 你可能三百多頁的文件當中 你在中間插入一句話 特別的話 然後你叫這個LM回答這句話裡面的問題 然後你每次當然可以把這一句話 這個Needle 放在整個文件當中的不一樣的地方 放在前面放在中間 放在25%的地方 放在35%的地方 然後你去看說 這個LM它對於整個文件 每一塊的部分 哪一塊比較熟悉 哪一塊不熟悉 我那時候就想說 一定有人立刻做這種Needle in a haystack的Analysis
(17:17~18:18) 然後我在X上面一找 馬上就找到了 就是有一個叫做Greg Kamrat的人 他就有做這個分析 然後他分析的方法就是 直接把一大堆Paul Graham的essay組合在一起 變成一篇超級長的文件 然後在這個文件不同的地方 他選擇的Needle就是一句話 就是在San Francisco 最享受的一件事情 就是到某某咖啡廳 某某公園 然後喝某某咖啡之類的 我有點忘記了 反正就是這樣子的一句話 然後他可能就會把這句話 放在整個文件的不同的地方 然後每一次都問這個GPT-4 請問在San Francisco 最適合做的事情是什麼 最享受的事情是什麼 那他有測出幾個insight 第一個insight就是 在73K token以上 GPT-4的表現就會開始變爛 第二個insight他發現的就是 這個Needle你如果是放在 文件的前7%到50%這個區段 是最不容易被LM抓到的 也就是GPT-4對於可能
(18:18~19:19) 前半部的文件 他是比較不熟悉的 然後最後一個insight就是 這個你的Needle 如果是放在整個文件的最前面 GPT-4是最熟的 他對於整個文件最熟的 就是最前面的那幾頁 那當然啦 這個結果一點都不意外 我們都知道 Long Context Length 技術上他就是會有一些trade off 但我個人覺得 雖然說這個George 他沒有拿Claw2一樣做一樣的事情 用一樣的句子 然後一樣的訓練資料 一樣的context資料來做比較 但我覺得單看這個結果 我覺得已經夠好了 就是你要超過73k的token 他的performance才會開始下降 雖然說73k 已經有點接近12k的一半了 意思就是說 他說的這個128k的context 其實你只要超過這個context的一半 你的performance就會開始下降 但是單看73k 很足夠了吧 就是7萬個token
(19:19~20:19) 你平時會問到的問題 的這個參考資料 應該都不會超過100多頁的書吧 所以我自己覺得這個context length 已經是非常不錯了 那再來這個GPD-4 Turbo 最大的一個賣點 就是API大降價 這個GPD-4 Turbo的API 是比GPD-4的API 降價了3倍左右 嚴格來說是2.75倍 因為你的input 變成3倍cheaper 然後你的output 變成2倍cheaper 然後綜合下來大概是2.75倍 那我覺得這個當然非常棒吧 這個就是一個很有感的降價 儘管你平時沒有在用API 你也知道 降3倍的價格是降很多吧 那X上面就有一個人做了一個試算 他要試算說 現在這個新的API價格究竟有多便宜 那他試算結果是這樣 他說 只要花15塊美金 你就可以讓GPD-4 Turbo 讀完全部7本哈利波特系列的小說 那這個當然對於有在用OpenAI的API 建他們的AI服務的這些企業
(20:19~21:21) 這些公司 絕對是超好消息啊 然後對於其他API的提供者 就是超糟糕的消息嘛 因為原本在GPD-4 Turbo出來之前 這個GPD-4的API就已經蠻吸引人了 因為GPD-4真的就是 現在最強的GPD-4 然後GPD-4 Turbo 就是最強的GPD-4 然後GPD-4 Turbo 真的就是現在最強的大型音樂模型 我覺得這個是大家都有共識的事情 他真的就是比其他人強 那這個GPD-4的API 他最大的缺點就是他很貴 然後他現在便宜了三倍 然後context length又變這麼長 然後再加上原本這個OpenAI的API 他就有一個很大的一些優勢 其中就包括這個 function calling的功能 然後又加上 這邊我還沒講 這邊是算是新產品的部分 就是他OpenAI會把之後的API 都加上一些很炫的功能 這個我待會再講 反正我要講的就是 OpenAI他們的API
(21:21~22:22) 絕對是現在最強的API 能做到最多事情 然後甚至不會貴那麼多的API 這邊當然等我之後再講到agents那邊 就是講到API這邊多的新的功能 你會更了解為什麼 就是他們真的是競爭力真的太強了 那我看很多人啊 他們講到OpenAI降價這件事情 他們都是在讚嘆就是 OpenAI他們在硬體這邊 真的做出了很強的規模經濟 就是Sam Almond在整個presentation 一開始他就有說 他們現在的ChatGPT的 weekly active user 每個禮拜的活躍用戶 有超過1億元 然後當然他們跟微軟的Azure 有非常密切的合作 然後他們不斷的優化他們的 硬體的這些基礎設施 讓這個cost可以降下來 但我自己覺得 GPT4這個模型 你想要節省他的營運成本 除了你從硬體這邊想以外 從軟體這邊你也有減少的空間 就是我們現在知道 這個就有人洩漏了 就是GPT4他的架構
(22:22~23:24) 其實不是一個大型圓模型 他是很多個大型圓模型組合起來的 我們現在掌握的數字是 8個2200億參數的圓模型組合起來的 那這8個圓模型 他們訓練的方法訓練的資料 都有一點點不一樣 所以他們擅長的東西也不一樣 所以說這個GPT4才會這麼強 就是他每次在回答問題的時候 其實是8個專家一起思考要怎麼樣回答 那這8個專家各有所長 所以說任何的問題 他們都可以回答得很好 那這種架構 我們在Machine Learning裡面 我們把它稱作Mixer of Experts 就是專家的混合 專家的組合的這種架構 他使用久了 然後他蒐集夠多的這種 使用者的回饋資料之後 他其實是可以慢慢降低他的成本的 這就是因為時間久了 你就可以抓到一些規律 你就可以發現說 在哪一些特定的問題 哪一些種類的問題當中 哪一些專家是有比較大的貢獻 哪一些專家是幾乎沒什麼貢獻的 然後你就可以開始更有效的規劃 這些專家
(23:24~24:24) 應該怎麼樣合作去回答這些問題 那在某些問題出現的時候 你知道 可能這兩個專家是不會有什麼貢獻的 你就不要Engage他們 這邊的Inference Cost 你就省下來了 所以我覺得他們這個GPD-4架構本身 他在軟體的部分 就有這個Cost down的機會 那當然這件事 這個OpenAI實際上是不是有做這件事 我們不知道 我們連他們架構具體來講 這個Mixer of Experts 他是怎麼樣組成的 怎麼樣合作的 我們也不知道 但我自己是覺得他們絕對有這個Cost down的 這個方法 這個可能的方法 那假設他們已經使用了 那這就是他們這次Cost down的主要原因 但我看他們好像GPD-3.5也有在Cost down 所以說可能這一次的Cost down 真的是來自硬體的使用效率的增加 但可能如果真的是這樣子的話 就代表他們未來還有機會從GPD-4的軟體這邊 讓他更加Cost down
(24:24~25:25) 好那以上是這個GPD-4 Turbo的部分 那接下來 我覺得接下來這個現有產品的進步這邊 還有兩個東西 但我們就講快一點 因為我覺得今天的重點 是要放在他們的這些 Agent相關的新產品 當然就包括這個GPT跟GPT Store 那現有產品的進步這邊 另外兩個重點 就是首先是Whisper V3 Whisper就是OpenAI的語音辨識模型 那我們都知道 這個你有聽第七集的話 你就會知道 我們科技讓每一集的竹子稿 現在也都是透過Whisper V2來生成的 那我在看DevDate他的Presentation 他的Keynote的時候 我聽到他說 現在有Whisper V3了 我就歐呦酥咿喔 那看來我可以Update一下 我們這個科技讓竹子稿的Code 讓他開始使用V3 可能會翻得更好一點 結果呢 我點進Whisper他的GitHub 然後看他V3這部分的Update
(25:25~26:26) 我看到這個V3 它在幾乎所有的外語的辨識上 就對他們來說 英文以外的語言是外語 在所有外語的辨識上 全部都變強了 唯獨在中文這邊的辨識 完全沒有變強 而且甚至有一點點倒退 就是還變弱 我覺得這個現象 如果你要從技術的角度來解釋的話 我們會稱作Catastrophic Forgetting 就是你把這個模型 它其他領域的知識變得更強的時候 它某一些領域的知識會變弱 然後他們這次可能就是 哇西方語系的能力變得越來越強 中文它自己獨立是一種語系 它可能就變弱了這樣 所以說我甚至沒有去研究說 他V3究竟做了哪些更動 因為我知道我根本就不會用到它 所以這邊我們就講到這邊 我們跳過 接下來我們要講API的新模態 好那這邊我覺得我先停下來退一步 幫大家做個基本知識的補充
(26:26~27:27) 因為我知道我的觀眾 雖然說很多是開發者 但是很多人可能沒有碰過程式 然後不知道開發的東西 所以說簡單解釋一下 就是我們現在要使用這些 OpenAI它出的語言模型 這些AI 我們有兩種方法 分別是給一般人的跟給開發者的 那給一般人的方法 當然就是使用他們自己推出的使用者介面 也就是ChatGPT這個網站 你只要進入這個網站登入 你就可以透過這個網站 它提供的介面來使用OpenAI的模型 你手機上可以下載到的App 也是屬於這個部分 就是它沒有提供使用者介面給你 那另外一種使用方法 就是給開發者的使用方法 就是API 這些開發者 如果想要在他們自己的產品當中 不管是他自己的網頁 還是他自己的App裡面 使用OpenAI的模型 他就必須要用OpenAI的API接到這個模型 然後把模型他算出來的答案傳回來
(27:27~28:30) 那你要使用這個API 基本上就是簡單幾行code而已 你就把這幾行code 放在你的產品的code當中就好了 那解釋完了這個基礎知識之後 你就會知道 他接下來推出的這個新的 現有功能的進步是什麼 他是說新API裡面出現新的模態 那他其實就是把 現在你在他使用者介面裡面 可以使用到的這些模型 開放他的API 讓開發者也可以使用這些模型 然後把這些模型build到他們的產品當中 那這邊就包括GPT-4 V 就是有視覺的GPT-4 然後還有包括Dali 3 就是他們產生圖片的那個模型 然後還有包括TTS TTS就是Text-to-Speech 也就是語音生成模型的意思 那這個語音生成模型 基本上就是你給他一串字 他就把這串字念出來 然後用很接近人類的聲音念出來 那現在有在使用者介面用到的部分 就是你可以跟ChadGBT 用人聲對話的這個部分
(28:30~29:32) 然後OpenAI這次推出這個TTS的模型 等於是他們又要進攻另外一個市場 因為一直以來這個TTS的市場 跟語言模型的市場 我覺得算是有一點點分開 就是TTS這邊有專門做TTS模型的公司 語言模型的公司就專門做語言模型 但現在OpenAI要推出這個TTS API 而且聽說還真的很不錯 就是至少我自己在他們官網使用 我覺得是真的蠻不錯的 那不確定他們是不是Chair Pick的結果 就是他們是不是挑最好的結果給你們看 但我覺得他們最後的API 如果有到這個程度的話 確實會對現在的這些TTS的一些Player 包括11Labs會有一點威脅 好那現有產品的進步 我就有講到這邊了 主要就跟大家講這三個大重點 GPT-4 Turbo, Whisper V3跟API的新模態 當然我知道他們還有發表很多其他的小東西 但我覺得我們還是把時間留給接下來的討論 好那接下來我們就趕緊進入
(29:32~30:33) OpenAI Dev Day他們的發表重點 主要有兩個 一個是GPTs一個是Assistance API 這兩個重點產品分別是針對一般大眾 跟Developer就是開發者的 那首先我們先來聊聊這個GPTs GPTs我覺得你可以把它想像成一個平台 在這個平台上你可以做兩件事情 第一件事就是 你可以很簡單的客製化一個你自己的Chat GPT 第二件事就是你可以把你做的這個GPT分享給別人 你現在可以做的就是 你做出這個GPT之後 你可以直接把這個Link傳給別人 別人可以透過那個Link Access使用你的GPT 然後在未來的一個月 OpenAI說他們要推出GPT Store 就是一個商城的概念 你可以在上面放你自己的GPT 然後這個商城也會有排行榜 你的GPT如果很有名被很多人使用的話 你還可以得到OpenAI的Revenue Share 好那首先我們先從 如何客製化你自己的GPT這邊講起
(30:33~31:33) 那為什麼會說你可以很簡單的客製化呢 這是因為你在客製化這個Chat GPT 你自己的GPT的過程中 你完全是使用自然語言在客製化 你不用寫任何一行Code 你在建你自己這個GPT的介面當中 它會有一個AI助手叫做GPT Builder 它會引導你帶著你一步一步的把這個GPT Build出來 首先先問你 你要做的這個GPT它想要做到什麼事情 再來問你這個GPT應該要取什麼名字 然後它會幫你想一個名字 然後問你覺得這個OK嗎 然後同樣大頭貼它也會先幫你生成一個 然後問你覺得這個OK嗎 然後之後會繼續問你說 那你覺得你這個GPT應該要Focus在哪一個部分之類的 反正它就是不斷的用自然語言 引導你把該做的設定都設定好 當然你也是直接用自然語言回答它 所以說你真的就是可以用自然語言 把你自己的GPT客製出來 然後除了跟這個GPT Builder講你這個GPT所有的設定以外
(31:33~32:35) 你還有三個方法可以讓你自己的GPT變得更強大 第一個方法就是你可以讓它有一些外加的能力 就是包括讓它有上網的能力 讓它有使用Dolly3產生Image的能力 還有讓它使用Code interpreter的能力 Code interpreter如果你不知道的話 基本上就是讓它有執行這個Code的能力 就是它不只會寫Code而已 它還可以執行這個Code 然後把結果回傳給你 第二個把你GPT變強的方法 是給它一個額外的知識庫 這邊你就是可以上傳任何相關的檔案 然後之後別人在使用你的GPT的時候 它就會使用你這個檔案裡面的知識來幫助它回答 最後一個可以讓你的GPT變強的方法 是他們稱作Custom Actions的方法 這邊基本上就是你可以讓你的GPT 可以使用第三方的API 簡單來說就是大家都知道ChatGPT的Plugin 就是ChatGPT的外掛 那這個Custom Actions 就是讓你這個GPT可以使用一些外掛 好那我不確定剛剛這樣講 你有沒有了解整個過程大概是怎樣 如果沒有的話沒關係
(32:35~33:35) 我接下來講一個我自己實際使用的例子 然後過程中順便講一下 我產生的一些想法 那我其實是在昨天的早上 就是禮拜六的早上 我才得到這個可以使用GPT的權限 我知道有些人好像在早幾天就可以使用了 我真的不知道為什麼 我永遠都是最晚可以使用這些New Feature的人 儘管我一直都有Subscribe那個ChatGPT Plus 然後我的用量也非常大 但OpenAI for some reason 它就是很討厭我 反正我昨天知道我得到權限之後 晚上我就立刻做了一個Hairy GPT 這個Hairy GPT背後的想法很單純 就是我的一個複製人 然後我做的事情非常單純 我就是跟這個GPT Builder說 我要Build一個Hairy GPT 然後這個Hairy GPT是專門可以回答 AI或是科技相關的問題的 然後當然也有給他一些細節的指示 就是這個Hairy GPT 他對於AI的大趨勢很了解 但同時他也知道AI的一些技術細節
(33:35~34:37) 聽我這樣講好像我現在是自己在自肥 但是其實沒有辦法 你在設定這個GPT的時候 你當然要把它設定的強一點 然後我把科技浪1到13集 每一集的竹子稿全部接在一起 然後把那個Time Stamp 就是那個時間的資訊給刪掉 然後把這個文件當作Hairy GPT的知識庫 然後整個過程我10分鐘就全部結束了 當然這個科技浪竹子稿 結合在一起清洗資料的部分 是有這個Code interpreter的幫助 但我真的就是跟這個GPT Builder 講一些話 講一些我這個GPT要怎麼樣的設定 然後再附一個知識庫給他 就結束了 我就有一個客製化的Hairy GPT了 好那在我分享Hairy GPT的使用體驗之前 我們先退一步 我們從一個技術的角度來看一下 這邊發生了什麼事情 我們知道你要客製化一個大型語言模型 就是讓這個大型語言模型 可以回答特定的問題 使用特定的知識 你要做到這件事情的話 你就只有兩個方法
(34:37~35:38) 一個方法就是微調這個模型 Fine tune它 第二個方法就是Prompt Engineering 你就直接做這個提示工程 那你在OpenAI這個GPT平台 客製化這個GPT的時候 我建出這個Hairy GPT的時候 有模型被Fine tune嗎 絕對沒有 全部的過程純粹就是在做Prompt Engineering 意思就是說 你客製化出來的這個Chat GPT 它其實跟OpenAI網站上那個Chat GPT 是一模一樣的 他們的大腦是一模一樣的 只是你客製化出來的這個版本 它在回答問題的時候 它會先看到你給它所有的設定 所以它會先進入那個角色 它會先知道自己是誰 然後應該要怎麼樣講話 然後同時這些GPT還有用到 更進階版的Prompt Engineering 叫做RAG 就是我自己在我這個頻道常常講的 全名叫做Retrieval Augmented Generation 這個在講什麼呢 在講的就是你附給它那個知識庫 當你這個GPT在回答問題的時候 會需要用到這個知識庫的時候 它會先從這個知識庫
(35:38~36:39) 抓出一段跟你現在問它這個問題 非常有關的上下文 然後把這個上下文 附到目前的Context當中 就是附在你給你自己這個GPT 所有的客製化設定 以及使用者的問題之後 然後你的GPT會根據 這一整包所有東西進行回答 所以沒錯這個新的GPT平台呢 就是一個非常Fancy的Prompt Engineering而已 我覺得你如果是工程師 尤其你是AI的工程師 你應該不會覺得非常Impressed 因為技術上這個是非常單純的事情 但是我覺得OpenAI真的包裝的非常好 就是它把整個介面建出來 然後Tune出一個GPT Builder這樣子的角色 它整個使用者介面使用者體驗 然後他們在Keynote上面 介紹這個GPT功能 這個GPT平台的時候包裝的方式 我覺得真的會讓一般人聽起來 好像真的是一個大突破 一個全新的產品 然後同時雖然說它的技術真的很單純 就是Prompt Engineering 但是你仔細想像一下 你真正要做到這件事情
(36:39~37:41) 而且是非常大規模的做到這件事情 其實你也是需要非常大的Engineering Effort 尤其是那個RAG的部分 也就是這些GPT的額外資料庫 這邊如果你有自己實做過一個RAG的話 你就知道 哇細節藏在魔鬼中 我自己是有去做過 就是我不是用非常High Level的 那種Lama Index 那種非常High Level的API 我是直接從Ground Up Build一個整個RAG的Flow 嚴格來說我還是在用Lama Index的一些API 但是我不是用他們最High Level的API 他們有些超級High Level的API 可以讓你在四五行扣之內 直接Build一個RAG的Flow 但是你把這四五行扣拆開來之後 你就會發現 哇下面有好多好多的步驟 然後每個步驟都有超多超多的超參數可以調 然後這邊的核心概念就是 你要把你這個額外的資料庫 轉換成一個向量的形式代表 然後把這些向量存在向量資料庫當中 然後在每次你需要從這個資料庫裡面 取出一些相關的上下文的時候
(37:41~38:43) 你要再用一個Retrieve All的演算法 去把正確的上下文抓出來 然後光是講到這邊 就有一大堆超參數可以調了 就是你要去Retrieve的演算法 你要用哪個演算法 可能有好幾百種好幾千種可以選 然後你再把你的資料變成向量的時候 你要使用到一個叫做embedding model 你要用哪一個embedding model 天下好幾萬個embedding model 然後你要expect 你的知識庫裡面是有每一種語言的 任何語言都有 你要怎麼做這件事情 然後你這些資料要切成很多很多小塊 這個小塊我們叫做一個Chunk 這個Chunk要多長 Again 每一種語言的Document都會出現 每一種長度的Document都會出現 每一種形式的Document 從Podcast的文字稿 到很詳細的分析文章 到一間公司的財報 到一個小說的對話 都可能是這個Document 那你究竟要怎麼handle這麼大的Variity 然後同時你是在非常大規模在跑這件事情 全天下好幾千萬個人 甚至到幾億個人
(38:43~39:43) 同時在一直進行這些Retrieval的動作 你究竟要怎麼樣Store這些所有人的Document 究竟要怎麼樣最有效的進行這個Retrieval 我覺得這邊有超多Engineering的問題 所以我那時候剛看完這個OpenAI Dev Day 兩分鐘之內我就PO了一則IG的限動 記錄我的想法 其中一個想法我就打說 我覺得OpenAI 它的Engineering能力真的是太驚人了 那這邊我覺得一定 當然有很多這個 尤其是在硬體這邊 有很多微軟Azure的人在幫忙 但他們可以做到這件事情做得這麼快 然後第一次開放就開放讓所有有付費訂閱 全世界所有有付費訂閱的人都可以使用 我覺得真的很厲害 好 那我們回到剛剛我們講說 我自己建了這個Harry GPT 然後我使用的一些感想 首先第一個就是我看到Bug 這邊的Bug呢 就是Engineering的Bug 我看到兩個Bug 第一個就是 它很多的問題被塞到同一則訊息裡面 就是這個GPT Builder
(39:43~40:43) 它不是會循序漸進的一直問你問題 然後幫你把這個GPT給Build出來嗎 它有一次不小心把所有它問的問題 全部都塞到一個訊息裡面 這樣我要怎麼回答 然後那很明顯是錯誤 就是它問我一個問題之後 我正要答我的回答的時候 它不讓我回答 它又突然又問一個問題 然後就接上去 所以說很明顯是它的Engineering出了問題 然後另外看到一個Bug就是 它講了兩三句話之後 它就講不下去了 它就會突然跳出一個錯誤訊息 上面寫說 Message in conversation not found 完全對我來說沒有任何幫助的一個error 你在講的Message是什麼 然後Conversation是什麼 是這個Conversation嗎 這是什麼意思 而且大部分人應該也都有感覺到 就是這幾天在使用ChapGPT的時候 它的報錯特別多 很多時候它都會趴帶 講不下去 或者是突然講到一半就停掉 有時候甚至是完全沒有辦法講任何一句話 就是完全沒有辦法回答你 那這些Bug
(40:43~41:43) 想當然都是跟這個他們的Product Launch有關 這個GPT的Launch有關 所以雖然說我剛剛稱讚他們的Engineering很強 他們確實還是會犯一些錯誤 畢竟這真的是非常大規模的Product Offering 而且不但大規模也還很複雜 就像我們剛講的 你現在不是非常單純的使用者問什麼問題 你丟給ChapGPT伺服器 算完之後回傳 就這樣 不是 有時候你丟問題的時候 你還要去使用限量資料庫 抓出適合的context 然後有時候你問問題的時候 你還要去跑一些Python的code 在別的機器上面跑完這個code 執行完之後 然後再把結果回傳給你 所以真的很複雜 那我看到這些Bug 我就當作沒看到了 就沒關係先不要嘴他們 再來我一個感想就是 你在建這個你自己的GPT的那個Page裡面 你如果滑到最下面 你會發現一個很小的這個設定 然後這個設定預設是Fold起來的 意思就是說 你不刻意去展開它的話 你是看不到它下面的選項的
(41:43~42:45) 然後想當然我一定是會去把它展開 所以我就把它展開了 然後我就看到 它裡面是一個已經選取了的Box 它已經幫你預設選取了 它預設選取了什麼東西呢 它預設選取了 同意你用你的GPT的對話資料 來訓練它的模型 也就是說 你如果沒有刻意去展開這個設定 然後把這個勾選的選項給取消的話 在預設情況之下 在你這個GPT上面發生的所有的對話 都會被OpenAI拿去訓練它的模型 當然這個不得不說 真的有點賊啊 但他們會想做這件事情是可以理解的 他們想要靠這些資料 讓他們的產品越來越好 那他們這麼做目前當然是沒有違法 但我總有一種感覺 就是當他們未來越來越大的時候 可能FTC會告他們這一點 如果未來的FTC跟現在FTC一樣的話 好 那我最後一個對於這個GPT的想法 就是Retrieval很爛 Retrieval我剛好像講到很多次 但我沒有詳細解說它是什麼
(42:45~43:45) 反正Retrieval就是RAG的R 就是RAG的R 它在講的就是 你從你的知識庫 也就是這個向量資料庫 抓出重要的上下文的這個動作 我覺得它做的蠻爛的是因為 第一個 你沒有明確講的時候 它有時候會不知道要進行Retrieval 那大家都知道 我們科技浪的第八集 是在聊特斯拉的人形機器人Optimus 對吧 然後第八集的最後 我有拿Optimus跟波士頓動力的Atlas機器人 進行一個比較 然後因為我有附這些竹子稿 給這個Hairy GPT當作他的資料庫 所以我就問他說 請幫我比較特斯拉的Optimus 跟波士頓動力的Atlas 那這邊 他根本就沒有搜索他的資料庫 他就是直接給我他的回答 因為這個CharGPT的大腦本身 它就有對於Optimus跟Atlas的知識 所以它是可以直接回答沒錯 但我要的是你進行Retrieval 然後跟我講哈利會怎麼看 所以我就回到Hairy GPT的設定頁面
(43:45~44:46) 然後在設定的那個Prompt裡面 加入一行 就是跟他說 任何問題都請先進行Retrieval 然後找到最相關的上下文再回答 然後確實在我加了這個設定之後 他開始會比較認真的 每一題都進行Retrieval 但是我發現Retrieval本身的效果也很差 就是他可能Retrieve不到真正有用的資訊 像是我問他同一題 就是比較Optimus跟Atlas 然後他竟然跟我說 他沒有找到任何相關的資訊 這我明明就有講 而且我還用三個不同的維度進行比較 但是他也是有偶爾會有成功的例子 就是我譬如說我問他說 Optimus的神經網路架構可能是哪一種 這一題他就有回答我 可能是Transformer 然後這應該是根據 一個叫做Jim Fan的博士的猜測 那這部分的資料 因為他的知識Cutoff到2023年的4月 所以他不可能知道這件事情 Jim Fan做這個猜測是幾個月前做的事情 所以說這邊我肯確定
(44:46~45:47) 他是有Retrieve到正確的資訊 但是就他現在的Retrieve的結果 我覺得完全不合格 我覺得如果這麼簡單的Retrieval都做不到 這個模型真的不會實用 因為我問的問題 真的是非常直接的Retrieval的問題 就是他根本就是我的竹子稿裡面 我有直接提到的事情 這樣子你還沒有Retrieve到 我覺得不太行 當然我覺得這邊可能的問題點 有可能是我全部的Retrieval task 然後我跟這個HarryGBD互動的模式 全部都是以繁體中文進行的 那想當然這個Retrieval的功能 我覺得應該是英文會做得比較好 再來就是我附給他的竹子稿 也不是完全正確 我是用Whisper產出來的 然後我中間是沒有任何修改 雖然說Whisper已經非常強了 但是他肯定還是會認錯一些字的 但我覺得這邊應該沒有影響特別大 因為我問的那些部分的問題 他是沒有講錯 Whisper是沒有翻錯什麼的 所以這邊我覺得我們可以確定的是 中文的Retrieval 中文的這個GPT
(45:47~46:48) 可能還沒有到很好的程度 但英文這邊我還持保留態度 我之後會再測試 那我覺得這個Retrieval 應該是整個GPT最關鍵的一個步驟 因為儘管你的頭腦再好 你可以回答問題回答的再好 你沒有拿到正確的上下文 你也回答不正確啊 所以我覺得這邊是OpenAI需要再去加油的 但我覺得他們絕對會進步的非常非常快 好那你現在知道什麼是GPT了 你要怎麼build一個GPT 然後所有人都可以build一個GPT 之後接下來的重點就是 你可以把你build出來的GPT share給別人 不管是透過一個URL的link 還是把你的GPT 放到他們未來會出現的GPT Store裡面 這個我覺得就是最關鍵的一個部分了 對於消費者來說 就是他們未來不只可以自己建自己的GPT 還可以把自己的GPT分享給自己的朋友 而且還可以用別人建出來非常好的GPT 就像是現在 任何事情基本上都可以在App Store裡面找到一個App
(46:48~47:48) 未來任何想問的問題 都可以在OpenAI的這個GPT Store裡面 找到一個最適合的AI助手 這邊我覺得真的對於OpenAI的策略來說 是一個非常大的一步 但我們先不講 我們先把他們最後一個亮點產品講完 也就是他們 這邊GPT都是為一般大眾設計的 接下來要講的就是為開發者設計的Assistance API 這些Assistance API 基本上就是原本ChatGPT API的強化版 它多了三個功能 第一個是threading threading的意思就是說 你之後可以把你的每一個使用者 跟你的產品 也就是說你的產品上面的ChatGPT 溝通的時候的每一個對話 全部都整理成一個一個的獨立的threads 這個threads就是那個對話串 就是它會把每一個使用者 跟你的API互動的所有的對話串都記錄下來 所以之後那個使用者 就可以延續他之前跟你的AI助手的對話 然後繼續講這樣
(47:48~48:50) 這功能真的超讚 而且我記得目前應該沒有其他API有這樣子的offer 我不確定 你可能透過一些雲服務業者 提供的這些大型原模型API 你可能可以做到 但我不確定了 但反正這個是非常好的一個功能 第二個功能就是retrieval 就是我們剛剛一直在講的 就是之後你的API 也可以接到一個知識庫 然後去retrieve相關的context出來了 這個retrieval當然也是特別棒 那這邊我就是知道 就是有一些雲端的業者 你跟他使用 你使用他提供的這些API 他確實是會幫你接一些retrieval的功能的 但是OpenAI有offer這個功能 果然還是很讚 最後一個 我覺得算是killer feature 超讚的 就是code interpreter 未來你使用這些chatch OpenAI的assistance API 你可以使用code interpreter 意思就是說 未來你的產品的使用者 可以問一些問題是 會需要你的產品 或者是你的AI助手
(48:50~49:50) 去跑Python的code 然後執行出來的結果的 這個code interpreter真的是開啟無限可能 但是這邊我覺得我可以講超級久 但我們今天沒什麼時間 我就先不講 賣個關子 未來再來多講講code interpreter 好那assistance API 基本上就是原本的chatch GPT API 多了這幾個功能 那還有一個他們在presentation 沒有講到的功能叫做 function calling 就是讓你這些API的助手 可以去使用一些第三方的API 但這邊這個功能原本就有了 所以說 我也不知道為什麼他要放在presentation上面 好終於 這個DevDate的所有重點 我們都講完了 接下來我們要講的就是 我一開始說的 我對於OpenAI這間公司現在的想法 這一點 我一開始在錄podcast的時候 我就超想講的 因為我覺得這個觀點 目前現在是只有我在講 因為我沒有看到其他任何人這樣講 那有可能是大家都已經知道了 他們只是懶得講出來 我可能是反而是比較慢的那個 但我覺得
(49:50~50:51) 雖然說我一直以來都有在觀察 OpenAI的一舉一動 然後都有在思考 他們接下來下一步是什麼 他們想要往什麼方向去 但我覺得這次的DevDate 真的才是一個非常明顯的 他們往 我覺得他們應該會去的那個方向 跨出了一步 我覺得OpenAI 想成為一個科技巨頭 而且我覺得他們 有很高的機率可以成為一個科技巨頭 當然這邊跟我一開始講的一樣 這是relative的 但他們真的是有很大的機會 我們看一下DevDate下的這步棋 就是它推出GPTs跟GPT Store 它這件事情 它的象徵意義是這樣 象徵著OpenAI從一個技術公司 變成了一個平台公司 它原本只提供技術 賣這些OpenAI的API 然後架一個網站 讓想要用的人來這個網站使用 但現在 它擁有了一個平台 它想要成為 所有對於客製化GPT 客製化大型原模型 有需求的人的去處 而我們都知道 這個需求是極其龐大的 基本上全世界每一個人
(50:51~51:51) 都會有對於 某種客製化大型原模型的需求 絕對的 OpenAI就是想要提供這個平台 然後再透過Ben Thompson提出的 Aggregation Theory 不斷的把規模做大 做大做大做大 做大到一個 能跟現在其他科技巨頭 並駕齊驅的程度 你如果不知道Ben Thompson是誰 他就是一個 科技業很有名的分析師 然後他最有名的就是 他提出這個Aggregation Theory 中文應該是叫做 那個 聚合理論 這個Aggregation Theory 是現在你看到的這些科技巨頭 他們之所以成為科技巨頭 他們都有使用的一個方法 他在講的過程 基本上就是這些科技巨頭 會提供一個平台 然後在這個平台提供 非常好的使用者體驗 然後透過這個非常好的使用者體驗 他會開始aggregate customer Aggregate的中文就是聚合嘛 聚合這個顧客 我就沒有 我一開始沒有講中文 就是因為我覺得這個 翻成中文我不確定 大家會不會理解 平時很少人用聚合這個詞 但是 英文是很常見的 就是
(51:51~52:53) 你把這些Customer Aggregate起來 然後 你Customer aggregate起來之後 你開始aggregate你的Supplier 然後這個Customer跟Supplier的Aggregation 會讓你整個平台體驗 又變得更好更好 然後你就一直進步 然後aggregate更多的Supplier跟Customer 直到你擁有整個Marketplace 然後最後你就可以利用你這個Marketplace的力量 去擴張到其他的領域 到這個階段 你基本上就已經是 大到不能再大了 好我知道我這樣講 一定很多人聽不懂 所以我們就直接把這個 理論套用到OpenAI身上 看他們下一步 可能會發生什麼事情 好那他們現在有這個 GPTs跟GPT Store了嘛對不對 大家都可以開始做自己的GPT 然後把它放到GPT Store裡面 那接下來會發生的第一件事呢就是 這個平台這個GPT Store 會非常快的開始aggregate customer 這邊講的Customer就是 想要使用一些客製化GPT 來解決他們生活中問題的人 那這邊aggregate的意思呢就是 這些人會被吸引到這個平台 他們一旦有這個需求
(52:53~53:55) 他們就會第一時間的找到這個平台 為什麼呢 因為第一個現在沒有其他的競爭者 沒有人在做類似的事情啊 除了Character AI 但Character AI是在搞笑的嘛 不是搞笑啦 就是他們是輕鬆的 他們是好玩的for fun的 但是GPT Store很大一部分 是for生產力的 而絕大多數人對於這個客製化 LM的需求都是生產力的需求 再來OpenAI有寄出revenue share給supplier 這邊的supplier就是製作這些GPT 然後把這些GPT放到GPT Store裡面的這些人 我們把它稱作supplier 那因為有revenue share 所以說一開始就會有一批的supplier進來 把這個store的東西豐富出來 就是把這個store變得越來越豐富啦 讓裡面有越來越多不同的這個客製化GPT 然後這個customer的aggregation 跟supplier的aggregation進行到一定程度之後 OpenAI又可以加速customer的aggregation 就是加速吸收到更多的人 因為它可以透過現有的這些customer 它的使用者體驗
(53:55~54:55) 來提升整個平台的使用者體驗嘛 對吧 你應該還記得那個隱藏在最下面的設定嘛 你如果沒有去uncheck它 基本上你整個在使用所有這些GPT的過程中 你留下的所有資料 全部都會被OpenAI拿去 再把這整個平台做得更好 然後OpenAI把這個使用者體驗做得更好的同時 就會吸引到更多人來用嘛 那更多人來用 又會吸引到更多的supplier 因為大家有revenue share嘛 然後全部人都在這邊 那你想做GPT來賺錢的人 一定全部都會湧到這個平台 所以隨著你aggregate起來的customer 跟supplier越來越多 你接下來的aggregation的速度 還會更加速 所以OpenAI就不斷的aggregate 直到它擁有整個marketplace 意思就是說 全天下所有對於客製化GPT有需求的人 都是直接跑到OpenAI的平台 因為它上面有最豐富的GPT 然後有最簡單的客製化GPT的流程 那你覺得到了這個地步 它的使用者會不會跟那種IG Facebook一樣多
(54:55~55:55) 我覺得很有可能啊 這個時候他只要想辦法在這些人身上 每個月炸出一點錢 它的revenue可能就已經開始有點接近這些科技巨頭了 然後它有了這個平台 然後又有了一個跟Google search一樣 是一種無限印鈔機的產品之後 它的下一步當然就是擴張啊 擴張到哪裡? 你看現在Sam Almond在幹嘛? 他已經在布局消費者硬體了 我們之前有一集科技量不是有說嗎? 他已經跟一個蘋果之前的designer 一起在設計未來的手機了 未來的消費者產品了 然後當他有了這個平台 又有了這個硬體 哇,那他還能不是科技巨頭嗎? 那絕對是啊 然後在整個過程中你會發現 我都沒有講到競爭者對不對? 我好像都預設都好像沒有人可以跟他們競爭對不對? 這邊我並不是偏袒他喔 而是因為當他們開始aggregate之後 跟他們競爭會變得越來越難 而且這個難度會指數性的上升 因為你要做的比這個GPT Store好 你就要提供更好的使用者體驗
(55:55~56:56) 但是OpenAI已經抓到第一批的使用者 而且根據這些使用者他的回饋 然後他的使用資料 他們已經開始提供 他們已經開始迭代他們的使用者體驗了 你要怎麼做的比他們好 所以我真的覺得OpenAI如果做得好 再這樣下去真的是很可怕 真的是unstoppable 但是當然這間公司是很特別的 因為它還有一個非營利的母公司存在在那邊 所以之後OpenAI賺到的這些錢 會被怎麼樣拿去使用 我們真的不知道 然後儘管它真的跟其他科技巨頭一樣 用aggregation theory做成了一個科技巨頭 之後下一步會是什麼 我們也不知道 它背後就是一個非營利組織 當然根據SameMOMENT的說法 他們最終的使命就是要build一個AGI 而且是好的AGI 但是很明顯的你現在整個OpenAI DEF DAY 每一個產品我覺得跟AGI都沒有直接關係 全部都是為了賺錢 當然你可以說 他們是因為build一個AGI是非常capital intensive的 會需要花很多錢 所以說他們先賺錢 然後再把這些錢拿來投資AGI 你可以這樣講沒錯
(56:56~57:57) 但重點是什麼時候 什麼時候開始 你要賺到什麼樣的地步 你要賺十年然後開始嗎 還是你賺五年開始 還是你賺到一定程度開始 我不知道萬一你就這樣一直賺下去呢 也有可能啊 所以對我來說啦 我現在看OpenAI這間公司 我就直接把它當一間科技公司來看 就是一間正常的獲利導向的科技公司 因為他們所有的作為 全部都是一間科技公司會出現的作為 包括整個DEF DAY 就是一個科技公司的開發者大會啊 他們跟他們一開始成立的那個樣子真的差太多 他們一開始是一個research lab 他們的發表會應該是 我們發現了什麼事情 我們離AGI又更近一步了 不是他們是 我們發表這個產品 這個產品降價 這個產品又變得更強了 買越多賺越多 好他們沒有講買越多賺越多 那是黃仁勳在講 但你也可以聽得出來吧 他就是在做一個科技公司的發表會啊 好那以上呢 全部當然都是我個人的想法啦 那這邊大家就聽聽就好啦
(57:57~58:59) 好那最後我要跟大家宣布一件事情 就是你在今天這一集的Podcast Show Note當中 Podcast的資訊欄當中 你可以看到一個聽者的回饋表單連結 我希望有聽到這裡的你們 都可以花大概一分鐘的時間 去把這個表單填一下 主要的目的當然就是 讓我多了解你一點 讓我多知道你的想法 這樣我才可以把未來科技浪做得更好 同時我們科技浪呢 未來也會推出訂閱服務 讓那些想要了解更多科技相關新聞 想要更深入的了解 想要聽更多節目 或者是想要有一個專屬社團的這些人 都能夠獲得這些他們想要的東西 我覺得這樣真的是很棒啊 就是你們不但可以多學到一點東西 多聽到一點知識 然後還可以同時贊助科技浪的營運 讓科技浪可以持久的營運下去 然後越做越好 那這邊一切的規劃呢 都是要從這份問卷開始 所以說就請大家花一分鐘的時間 去填一下這個問卷 那兩個禮拜之後呢 我也會從這些所有填問卷的人當中 抽出一個人送出科技浪的手提袋
(58:59~59:07) 這是科技浪目前唯一一個 全球唯一一個科技浪的周邊產品 所以這邊就麻煩大家了 最後也祝大家有個愉快的一週
